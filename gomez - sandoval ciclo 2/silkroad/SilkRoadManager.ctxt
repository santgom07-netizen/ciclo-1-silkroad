#BlueJ class context
comment0.target=SilkRoadManager
comment0.text=\r\n\ Gestor\ de\ movimientos\ y\ estrategias\ para\ robots\ en\ la\ Ruta\ de\ la\ Seda.\r\n\ Implementa\ la\ l\u00F3gica\ de\ decisi\u00F3n\ de\ movimientos\ para\ maximizar\ ganancias\ (Requisito\ 11).\r\n
comment1.params=roadLength
comment1.target=SilkRoadManager(int)
comment1.text=\r\n\ Constructor\ del\ gestor\ de\ movimientos.\r\n
comment10.params=storeLocation
comment10.target=int\ getStoreEmptyCount(int)
comment10.text=\r\n\ Consulta\ el\ n\u00FAmero\ de\ veces\ que\ una\ tienda\ ha\ sido\ vaciada\ (Requisito\ 12).\r\n\ \r\n\ @param\ storeLocation\ Ubicaci\u00F3n\ de\ la\ tienda\r\n\ @return\ N\u00FAmero\ de\ veces\ que\ ha\ sido\ vaciada\r\n
comment11.params=
comment11.target=java.util.Map\ getAllStoreEmptyCounts()
comment11.text=\r\n\ Consulta\ todas\ las\ estad\u00EDsticas\ de\ vaciado\ de\ tiendas\ (Requisito\ 12).\r\n\ \r\n\ @return\ Mapa\ con\ ubicaci\u00F3n\ de\ tienda\ y\ n\u00FAmero\ de\ veces\ vaciada\r\n
comment12.params=robotLocation
comment12.target=java.util.List\ getRobotGains(int)
comment12.text=\r\n\ Consulta\ las\ ganancias\ de\ un\ robot\ por\ movimiento\ (Requisito\ 13).\r\n\ \r\n\ @param\ robotLocation\ Ubicaci\u00F3n\ actual\ del\ robot\r\n\ @return\ Lista\ de\ ganancias\ por\ cada\ movimiento\r\n
comment13.params=
comment13.target=java.util.Map\ getAllRobotGains()
comment13.text=\r\n\ Consulta\ todas\ las\ ganancias\ de\ todos\ los\ robots\ (Requisito\ 13).\r\n\ \r\n\ @return\ Mapa\ con\ ubicaci\u00F3n\ del\ robot\ y\ sus\ ganancias\ hist\u00F3ricas\r\n
comment14.params=
comment14.target=Robot\ getRobotWithMaxGain()
comment14.text=\r\n\ Calcula\ el\ robot\ con\ mayor\ ganancia\ total.\r\n\ \r\n\ @return\ El\ robot\ con\ mayor\ ganancia\ acumulada\r\n
comment15.params=
comment15.target=void\ resetStatistics()
comment15.text=\r\n\ Reinicia\ todas\ las\ estad\u00EDsticas.\r\n
comment2.params=robot
comment2.target=void\ registerRobot(Robot)
comment2.text=\r\n\ Registra\ un\ robot\ en\ el\ sistema.\r\n
comment3.params=store
comment3.target=void\ registerStore(Store)
comment3.text=\r\n\ Registra\ una\ tienda\ en\ el\ sistema.\r\n
comment4.params=robot
comment4.target=void\ unregisterRobot(Robot)
comment4.text=\r\n\ Desregistra\ un\ robot\ del\ sistema.\r\n
comment5.params=store
comment5.target=void\ unregisterStore(Store)
comment5.text=\r\n\ Desregistra\ una\ tienda\ del\ sistema.\r\n
comment6.params=robot
comment6.target=int\ calculateOptimalMove(Robot)
comment6.text=\r\n\ Calcula\ el\ movimiento\ \u00F3ptimo\ para\ un\ robot\ buscando\ maximizar\ ganancias.\r\n\ Implementaci\u00F3n\ del\ Requisito\ 11.\r\n\ \r\n\ @param\ robot\ El\ robot\ para\ el\ cual\ calcular\ el\ movimiento\r\n\ @return\ N\u00FAmero\ de\ pasos\ a\ mover\ (positivo\ o\ negativo)\r\n
comment7.params=storeValue\ distance
comment7.target=int\ calculateProfitWithCost(int,\ int)
comment7.text=\r\n\ Calcula\ la\ ganancia\ considerando\ el\ costo\ del\ movimiento.\r\n
comment8.params=robot\ gain
comment8.target=void\ recordGain(Robot,\ int)
comment8.text=\r\n\ Registra\ una\ ganancia\ para\ un\ robot.\r\n
comment9.params=store
comment9.target=void\ recordStoreEmptied(Store)
comment9.text=\r\n\ Registra\ cuando\ una\ tienda\ es\ vaciada.\r\n
numComments=16
